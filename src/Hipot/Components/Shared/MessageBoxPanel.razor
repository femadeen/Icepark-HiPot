@using Hipot.Data.Core.Models

<div class="message-box-overlay">
    <div class="message-box">
        <div class="message-box-header">
            <h3>@Title</h3>
        </div>
        <div class="message-box-body">
            <div class="message-box-image">
                <img src="@ImageUrl" />
            </div>
            <div class="message-box-text">
                <p>@Message</p>
            </div>
        </div>
        <div class="message-box-footer">
            @if (Buttons == MessageBoxButtons.OK)
            {
                <button class="btn-primary" @onclick="OnOkClicked">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor"><path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/></svg>
                    <span>OK</span>
                </button>
            }
            else if (Buttons == MessageBoxButtons.YesNo)
            {
                <button class="btn-primary" @onclick="OnYesClicked">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor"><path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/></svg>
                    <span>Yes</span>
                </button>
                <button class="btn-secondary" @onclick="OnNoClicked">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>
                    <span>No</span>
                </button>
            }
        </div>
    </div>
</div>

<style>
    .message-box-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .message-box {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        width: 400px;
        max-width: 90%;
    }

    .message-box-header {
        padding: 1rem;
        border-bottom: 1px solid #eee;
    }

    .message-box-header h3 {
        margin: 0;
        font-size: 1.25rem;
    }

    .message-box-body {
        padding: 1rem;
        display: flex;
        align-items: center;
    }

    .message-box-image {
        margin-right: 1rem;
    }

    .message-box-image img {
        width: 64px;
        height: 64px;
    }

    .message-box-text {
        font-size: 1rem;
    }

    .message-box-footer {
        padding: 1rem;
        border-top: 1px solid #eee;
        display: flex;
        justify-content: flex-end;
        gap: 1rem;
    }

    .btn-primary, .btn-secondary {
        padding: 0.8rem 1.2rem;
        border: none;
        border-radius: 12px;
        color: white;
        font-size: 0.9rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .btn-primary {
        background-color: #28a745;
    }

    .btn-secondary {
        background-color: #dc3545;
    }

    .btn-primary svg, .btn-secondary svg {
        width: 18px;
        height: 18px;
    }
</style>

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string Message { get; set; }

    [Parameter]
    public string ImageUrl { get; set; }

    [Parameter]
    public MessageBoxButtons Buttons { get; set; }

    [Parameter]
    public EventCallback OnOkClicked { get; set; }

    [Parameter]
    public EventCallback OnYesClicked { get; set; }

    [Parameter]
    public EventCallback OnNoClicked { get; set; }
}
